// Test generated by RoostGPT for test netflix-react using AI Type Open AI and AI Model gpt-4-1106-preview

import React from 'react';
import { render, screen } from '@testing-library/react';
import { BrowserRouter as Router } from 'react-router-dom';
import Header from '../../../src/Components/Header/Header';

describe('Header Component', () => {
    // Use beforeEach to wrap each test in a Router since we're using Link components
    beforeEach(() => {
        render(<Router><Header /></Router>);
    });

    test('renders header component', () => {
        const navElement = screen.getByRole('navigation');
        expect(navElement).toBeInTheDocument();
    });

    test('displays the logo', () => {
        const logo = screen.getByRole('img', { name: /logo/i });
        expect(logo).toBeInTheDocument();
        expect(logo).toHaveAttribute('src', expect.stringContaining('logo.png'));
    });

    test('includes navigation to TV Shows', () => {
        expect(screen.getByRole('link', { name: /tv shows/i })).toHaveAttribute('href', '/tvshows');
    });

    test('includes navigation to Movies', () => {
        expect(screen.getByRole('link', { name: /movies/i })).toHaveAttribute('href', '/movies');
    });

    test('includes navigation to Recently Added', () => {
        expect(screen.getByRole('link', { name: /recently added/i })).toHaveAttribute('href', '/recent');
    });

    test('includes navigation to My List', () => {
        expect(screen.getByRole('link', { name: /my list/i })).toHaveAttribute('href', '/mylist');
    });

    test('contains search icon', () => {
        const searchIcon = screen.getByTestId('search-icon');
        expect(searchIcon).toBeInTheDocument();
    });
});

